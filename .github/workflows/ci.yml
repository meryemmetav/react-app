name: Deploy to production

on:
 push:
  branches: [ main ]

jobs:

 deploy:
  name: Build image
  runs-on: ubuntu-latest

  steps:
  - name: Check out code
    uses: actions/checkout@v2

  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-region: us-east-1

  - name: Login to Amazon ECR
    id: login-ecr
    uses: aws-actions/amazon-ecr-login@v1

  - name: Get the list of image digest(s) for the repository
    id: get-image-digest
    run: |
      OLD_IMAGE_DIGEST=$(aws ecr list-images --repository-name $ECR_REPOSITORY --filter tagStatus=TAGGED --query 'imageIds[*].imageDigest' --output json)
      echo "::set-output name=OLD_IMAGE_DIGEST::$OLD_IMAGE_DIGEST"

  - name: Delete all existing images in the repository
    if: steps.get-image-digest.outputs.OLD_IMAGE_DIGEST != '[]'
    run: |
      aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids $(echo $OLD_IMAGE_DIGEST | tr -d '[]" ')

  - name: Build, tag, and push image to Amazon ECR
    env:
      ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      ECR_REPOSITORY: dockrrepo
      IMAGE_TAG: ${{ github.sha }}
    run: |
      docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  

